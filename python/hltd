#!/bin/env python
#
# chkconfig:   2345 81 03
#
import os,sys
sys.path.append('/opt/hltd/python')
sys.path.append('/opt/hltd/lib')
from hltd import hltd
from subprocess import Popen
from subprocess import PIPE
from applianceumount import stopFUs
from applianceumount import checkMode
import time
import syslog

if __name__ == "__main__":

  if len(sys.argv) <=2 or sys.argv[2]=="main":
      instances = ["main"]
  elif sys.argv[2]=="all":
      try:
          instances=[]
          with open('/etc/hltd.instances','r') as fi:
            for line in fi.readlines():
              lnstrip = line.strip(' \n')
              if len(lnstrip)>0 and lnstrip.startswith("#")==False:
              instances.append(lnstrip)
      except:
          instances = ["main"]
  else:
      instances = [sys.argv[2]]

  for instance in instances:  
    print "handling instance",instance
    daemon = hltd(instance)

    if len(sys.argv) >= 2:
        if 'start' == sys.argv[1]:
            daemon.touchLockFile()
            output = Popen(["/opt/hltd/python/hltd.py"], stdout=PIPE).communicate()[0]
            if daemon.silentStatus():
                print '[OK]'
            else:
                print '[Failed]'
                print output
        elif 'stop' == sys.argv[1]:
            if daemon.status():
                daemon.stop()
            else:
                daemon.delpid()

            #determine runlevel
            std_out=""
            try:
                p = Popen("runlevel", shell=True, stdout=PIPE)
                p.wait()
                std_out=p.stdout.read()
                from_level = std_out.split('\t')[0].rstrip('\n').strip().split(' ')[0]
                to_level = std_out.split('\t')[0].rstrip('\n').strip().split(' ')[1]
                if to_level.isdigit() and int(to_level) in [0,1,6] and str(from_level)!="1":
 
                    if stopFUs(instance)==False:
                        msg = "Shutdown or reboot is cancelled by hltd - FU umount failed! Switching to runlevel 3..."
                        syslog.syslog("hltd-"+str(instance)+":"+msg)
                        time.sleep(2)
                        p = Popen("init 3", shell=True, stdout=PIPE)
                        p.wait()
                    else:
                        daemon.removeLockFile()
                else:
                    if checkMode(instance)=="fu": 
                        daemon.removeLockFile()
                    else:
                        print "Lock file remains. Run stop-appliance to unmount FUs."
            except:
                print "Runlevel:",std_out
                syslog.syslog("hltd-"+str(instance)+":Exception when determining runlevel:"+str(std_out))
                

        elif 'stop-appliance' == sys.argv[1]:
            if daemon.status():
                daemon.stop()
            else:
                daemon.delpid()

            if checkMode(instance)=="fu":
                print "This command is not supported on FU."
               
            elif stopFUs(instance)==False:
                print "FU umount failed, lock file remains. FU umount failed."
            else:
                daemon.removeLockFile()

        elif 'stop-light' == sys.argv[1]:
            if daemon.status():
                daemon.stop()
            else:
                daemon.delpid()
            daemon.removeLockFile()
 
        elif 'restart' == sys.argv[1]:
            daemon.restart()
            daemon.touchLockFile()
        elif 'status' == sys.argv[1]:
            daemon.status()
        else:
            print "Unknown command"
            sys.exit(2)
        sys.exit(0)

    else:
        print "usage: %s start|stop|stop-light|restart|status |all|main|instance" % sys.argv[0]
        sys.exit(2)
